<?xml version="1.0"?>
<robot name="capo" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:include filename="$(find topnav_bot_description)/urdf/materials.xacro" />

    <xacro:property name="scale" value="1.0" />
    <xacro:property name="caseWidth" value="${0.1 * scale}" />
    <xacro:property name="caseLength" value="${0.18 * scale}" />
    <xacro:property name="caseHeight" value="${0.12 * scale}" />
    <xacro:property name="caseWeight" value="${4 * scale}"/>
    <xacro:property name="wheelDiam" value="${0.1 * scale}" />
    <xacro:property name="wheelWidth" value="${0.02 * scale}"/>
    <xacro:property name="wheelCaseGap" value="${0.0008 * scale}"/>
    <xacro:property name="wheelToMiddleWidth" value="${(caseWidth + wheelWidth)/2 + wheelCaseGap}"/>
    <xacro:property name="wheelToMiddleLength" value="${caseLength/2 - 0.06 * scale}"/>
    <xacro:property name="wheelWeight" value="${0.15 * scale}" />
    <xacro:property name="headDiam" value="${0.05 * scale}" />
    <xacro:property name="headHeight" value="${0.08 * scale}" />
    <xacro:property name="headWeight" value="${0.1 * scale}" />
    <xacro:property name="cameraWidth" value="${0.095 * scale}" />
    <xacro:property name="cameraHeight" value="${0.03 * scale}" />
    <xacro:property name="cameraDepth" value="${0.03 * scale}" />
    <xacro:property name="hokuyoSide" value="${0.05 * scale}" />
    <xacro:property name="hokuyoHeight" value="${0.07 * scale}" />
    <xacro:property name="casterWheelRadius" value="${0.01 * scale}"/>
    <xacro:property name="casterWheelWeight" value="${0.1* scale}"/>

    <xacro:property name="laserSamplesCount" value="61"/>
    <xacro:property name="laserMinAngle" value="${-2*pi/3}"/>
    <xacro:property name="laserMaxAngle" value="${2*pi/3}"/>

    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0"
                     iyy="1.0" iyz="0.0"
                     izz="1.0" />
        </inertial>
    </xacro:macro>

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${caseLength} ${caseWidth} ${caseHeight}"/>
            </geometry>
            <material name="gray"/>
        </visual>

        <inertial>
            <xacro:property name="w" value="${caseWidth}" />
            <xacro:property name="h" value="${caseHeight}" />
            <xacro:property name="d" value="${caseLength}" />
            <xacro:property name="m" value="${caseWeight}" />
            <mass value="${m}" />
            <inertia ixx="${(1/12)*m*(h*h+d*d)}" ixy="0.0" ixz="0.0"
                     iyy="${(1/12)*m*(w*w+h*h)}" iyz="0.0"
                     izz="${(1/12)*m*(w*w+d*d)}" />
        </inertial>

        <collision>
            <geometry>
                <box size="${caseLength} ${caseWidth} ${caseHeight}"/>
            </geometry>
        </collision>
    </link>

    <xacro:include filename="../capo/head/capo.head.xacro" />

    <transmission name="head_swivel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="$head_swivel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="head_swivel">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
    </transmission>

    <gazebo reference="head">
        <!-- generates warn  Element[mu], child of element[link] not defined in SDF. Ignoring[mu]-->
        <!-- http://wiki.ros.org/urdf/Tutorials/Using%20a%20URDF%20in%20Gazebo -->
        <mu1 value="200.0"/>
        <mu2 value="100.0"/>
        <kp value="1000000.0" />
        <kd value="1.0" />
        <material>Gazebo/Grey</material>
    </gazebo>
    <!-- /head -->

    <xacro:macro name="wheel" params="prefix suffix origX origY origZ mass diam width">
        <link name="${prefix}_${suffix}_wheel">
            <visual>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${width}" radius="${diam/2}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${width}" radius="${diam/2}"/>
                </geometry>
            </collision>
            <inertial>
                <xacro:property name="r" value="${diam/2}" />
                <xacro:property name="h" value="${width}" />
                <xacro:property name="m" value="${mass}" />

                <mass value="${m}" />
                <inertia ixx="${(1/12)*m*(3*r*r+h*h)}" ixy="0.0" ixz="0.0"
                         iyy="${0.5*m*r*r}" iyz="0.0"
                         izz="${(1/12)*m*(3*r*r+h*h)}" />
            </inertial>
        </link>
        <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
            <axis rpy="0 0 0" xyz="0 1 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_${suffix}_wheel"/>
            <origin rpy="0 0 0" xyz="${origX} ${origY} ${origZ}"/>
        </joint>

        <transmission name="${prefix}_${suffix}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <actuator name="${prefix}_${suffix}_wheel_motor">
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
            <joint name="${prefix}_${suffix}_wheel_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
        </transmission>

        <gazebo reference="${prefix}_${suffix}_wheel">
            <!-- generates warn  Element[mu], child of element[link] not defined in SDF. Ignoring[mu]-->
            <!-- http://wiki.ros.org/urdf/Tutorials/Using%20a%20URDF%20in%20Gazebo -->
            <mu1 value="40.0"/>
            <mu2 value="20.0"/>
            <kp value="1000000.0" />
            <kd value="1.0" />
            <!--<fdir1>0 0 1</fdir1>-->
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <xacro:wheel prefix="rear" suffix="left" origX="${-wheelToMiddleLength}" origY="${wheelToMiddleWidth}" origZ="0.0" mass="${wheelWeight}" diam="0.01" width="0.01"/>
    <xacro:wheel prefix="rear" suffix="right" origX="${-wheelToMiddleLength}" origY="${-wheelToMiddleWidth}" origZ="0.0" mass="${wheelWeight}" diam="0.01" width="0.01"/>
    <xacro:wheel prefix="front" suffix="left" origX="${wheelToMiddleLength}" origY="${wheelToMiddleWidth}" origZ="-0.02" mass="${wheelWeight}" diam="${wheelDiam}" width="${wheelWidth}"/>
    <xacro:wheel prefix="front" suffix="right" origX="${wheelToMiddleLength}" origY="${-wheelToMiddleWidth}" origZ="-0.02" mass="${wheelWeight}" diam="${wheelDiam}" width="${wheelWidth}"/>

    <xacro:macro name="caster_wheel" params="prefix origX origY origZ">
        <link name="${prefix}_caster_wheel">
            <visual>
                <geometry>
                    <sphere radius="${casterWheelRadius}"/>
                </geometry>
                <material name="gray"/>
            </visual>

            <inertial>
                <xacro:property name="r" value="${casterWheelRadius}"/>
                <xacro:property name="m" value="${casterWheelWeight}"/>
                <mass value="${m}"/>
                <inertia ixx="${(2/5)*m*r*r}" ixy="0.0" ixz="0.0"
                         iyy="${(2/5)*m*r*r}" iyz="0.0"
                         izz="${(2/5)*m*r*r}"/>
            </inertial>
            <collision>
                <geometry>
                    <sphere radius="${casterWheelRadius}"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>0</mu>
                            <mu2>0</mu2>
                            <slip1>1.0</slip1>
                            <slip2>1.0</slip2>
                        </ode>
                    </friction>
                </surface>
            </collision>
        </link>
        <joint name="base_${prefix}_caster_wheel_joint" type="fixed">
            <axis rpy="0 0 0" xyz="0 1 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_caster_wheel"/>
            <origin rpy="0 0 0" xyz="${origX} ${origY} ${origZ}"/>
        </joint>
    </xacro:macro>

    <xacro:caster_wheel prefix="left" origX="-0.08" origY="0.04" origZ="${scale * -0.06}"/>
    <xacro:caster_wheel prefix="right" origX="-0.08" origY="-0.04" origZ="${scale * -0.06}"/>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>

</robot>
