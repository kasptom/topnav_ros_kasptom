<launch>
    <!-- launch video stream -->
    <arg name="camera_dev_video_id" default="1"/>
    <arg name="visualize" default="false"/>
    <group ns="capo">
        <include file="$(find video_stream_opencv)/launch/camera.launch">
            <!-- node name and ros graph name -->
            <arg name="camera_name" value="camera1"/>
            <!-- means video device 0, /dev/video0 -->
            <arg name="video_stream_provider" value="$(arg camera_dev_video_id)"/>
            <!-- set camera fps to (if the device allows) -->
            <arg name="set_camera_fps" value="60"/>
            <!-- set buffer queue size of frame capturing to -->
            <arg name="buffer_queue_size" value="1"/>
            <!-- throttling the querying of frames to -->
            <arg name="fps" value="10"/>
            <!-- setting frame_id -->
            <arg name="frame_id" value="capo2_camera"/>
            <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
            "file:///$(find your_camera_package)/config/your_camera.yaml" -->
            <!--<arg name="camera_info_url" value="file://$(find topnav_capo2)/config/test_calibration.yaml"/>-->

            <!-- flip the image horizontally (mirror it) -->
            <arg name="flip_horizontal" value="false"/>
            <!-- flip the image vertically -->
            <arg name="flip_vertical" value="false"/>

            <arg name="width" value="640"/>
            <arg name="height" value="480"/>
            <!-- visualize on an image_view window the stream generated -->
            <arg name="visualize" value="$(arg visualize)"/>
        </include>
    </group>
    <node name="camera_calibration"
          pkg="camera_calibration"
          type="cameracalibrator.py"
          respawn="false" output="screen" args="--size 9x6 --square 0.0238 image:=capo/camera1/image_raw camera:=camera1 --no-service-check"/>
</launch>
